{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","filterBy","onFilterChange","query","onChangeQuery","onClearQuery","value","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onDelete","useState","user","setUser","loading","setIsLoading","useEffect","userId","finally","href","name","App","setTodos","setFilterBy","setQuery","setSelectedTodo","e","target","visibleTodos","trim","filter","toLowerCase","includes","prepareTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d04fb73.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelect: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect = () => { },\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn(\n            '',\n            {\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={cn(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  filterBy: string,\n  onFilterChange: (e: React.ChangeEvent<HTMLSelectElement>) => void,\n  query: string,\n  onChangeQuery: (e: React.ChangeEvent<HTMLInputElement>) => void,\n  onClearQuery: ()=> void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  onFilterChange,\n  query,\n  onChangeQuery,\n  onClearQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterBy}\n          onChange={onFilterChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"clearQuery\"\n            onClick={onClearQuery}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  onDelete?: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onDelete }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div\n      className={cn(\n        'modal',\n        {\n          'is-active': selectedTodo,\n        },\n      )}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close\"\n              onClick={onDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterBy, setFilterBy] = useState('All');\n  const [query, setQuery] = useState('');\n  const [loading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleQueryDelete = () => {\n    setQuery('');\n  };\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(e.target.value);\n  };\n\n  const prepareTodos = () => {\n    let visibleTodos = [...todos];\n\n    if (query.trim() !== '') {\n      visibleTodos = visibleTodos.filter(todo => todo.title.toLowerCase().includes(query.trim().toLowerCase()));\n    }\n\n    switch (filterBy) {\n      case 'completed':\n        visibleTodos = visibleTodos.filter(todo => todo.completed);\n        break;\n\n      case 'active':\n        visibleTodos = visibleTodos.filter(todo => !todo.completed);\n        break;\n\n      default:\n        return visibleTodos;\n    }\n\n    return visibleTodos;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                onFilterChange={handleFilterChange}\n                query={query}\n                onChangeQuery={handleQueryChange}\n                onClearQuery={handleQueryDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader /> }\n              <TodoList\n                todos={prepareTodos()}\n                onSelect={setSelectedTodo}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={selectedTodo}\n        onDelete={() => setSelectedTodo(null)}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}